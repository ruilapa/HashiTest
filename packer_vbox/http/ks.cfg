install
cdrom

lang en_US.UTF-8
keyboard us
timezone --utc Etc/UTC

cmdline

network --device eth0 --bootproto dhcp

firewall --disabled
selinux --disabled
authconfig --enableshadow --passalgo=sha512

zerombr
ignoredisk --only-use=sda
bootloader --location=mbr --driveorder=sda --append="clocksource_failover=acpi_pm"

# Similar to an AWS micro instance.
clearpart --drives=sda --all
part / --fstype=ext4 --size 7575
part swap --size 613

firstboot --disabled

rootpw --plaintext vagrant

reboot

%packages --instLangs=en_US.utf8 --nobase --ignoremissing --excludedocs
openssh-clients
sudo
curl
wget
nfs-utils
net-tools
vim-minimal
yum-utils

# unnecessary firmware
-aic94xx-firmware
-atmel-firmware
-b43-openfwwf
-bfa-firmware
-efibootmgr
-fprintd-pam
-intltool
-irqbalance
-ipw*-firmware
-ivtv-firmware
-iwl*-firmware
-libertas-sd8686-firmware
-libertas-sd8787-firmware
-libertas-usb8388-firmware
-linux-firmware
-ql*-firmware
-ql*-firmware
-ql*-firmware
-ql*-firmware
-ql*-firmware
-rt61pci-firmware
-rt73usb-firmware
-xorg-x11-drv-ati-firmware
-zd1211-firmware
%end

%post --log=/root/install-post.log

set -x

echo %_install_langs en_US.utf8 >> /etc/rpm/macros

# No fsck at boot
sed -i -E 's/(defaults[[:space:]]+)1 1/\10 0/' /etc/fstab

# Create vagrant user
groupadd vagrant
useradd vagrant -g vagrant -G wheel
echo -n "vagrant" | passwd vagrant --stdin

# Install vagrant keys
mkdir -p /home/vagrant/.ssh
(echo -n ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrt
 echo -n vp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS
 echo -n 0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPI
 echo -n TAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6ki
 echo -n vAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvx
 echo -n hMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE
 echo 98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key ) \
     > /home/vagrant/.ssh/authorized_keys
chown -R vagrant:vagrant /home/vagrant/.ssh
chmod 600 /home/vagrant/.ssh/authorized_keys
chmod 700 /home/vagrant/.ssh

# Install root keys
mkdir -p /root/.ssh
(echo -n ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrt
 echo -n vp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS
 echo -n 0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPI
 echo -n TAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6ki
 echo -n vAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvx
 echo -n hMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE
 echo 98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key ) \
     > /root/.ssh/authorized_keys
chown -R root:root /root/.ssh
chmod 600 /root/.ssh/authorized_keys
chmod 700 /root/.ssh

# sudo
yum install -y sudo
echo "vagrant ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/vagrant
echo "Defaults:vagrant !requiretty" >> /etc/sudoers
echo "Defaults:root !requiretty" >> /etc/sudoers

yum -y install epel-release
yum clean metadata

# Update system
yum -y config exclude cscope ctags doxygen intltool systemtap
yum -y update
yum -y install kernel-devel gcc perl make bzip2 kernel-headers dkms

# Squash the delay on boot
sed -i '/splashimage/d;s_timeout.*$_timeout=0_;s/ rhgb quiet//g' \
    /boot/grub/grub.conf

# Setup network devices.
rm /etc/udev/rules.d/70-persistent-net.rules
echo '#' >/etc/udev/rules.d/75-persistent-net-generator.rules
cat <<EOM >/etc/sysconfig/network
HOSTNAME=centos72.dev
NETWORKING=yes
EOM

cat <<EOM >/etc/sysconfig/network-scripts/ifcfg-eth0
BOOTPROTO=dhcp
DEVICE=eth0
DHCP_HOSTNAME=centos72.dev
IPV6INIT=yes
NM_CONTROLLED=no
ONBOOT=yes
TYPE=Ethernet
EOM

echo 'UseDNS no' >> /etc/ssh/sshd_config

chkconfig --level 2345 auditd off
chkconfig --level 2345 crond off
chkconfig --level  345 netfs off
chkconfig --level  345 nfslock off
chkconfig --level 2345 rpcbind off
chkconfig --level  345 rpcgssd off
chkconfig --level  345 rpcidmapd off

# Just keep US English.
find /usr/share/locale -mindepth 1 -maxdepth 1 -type d \
    -not -name en -not -name en_US -not -name 'en@*' \
    -exec rm -rf {} +

localedef --list-archive | \
    grep -vE '^en_US.*' | \
    xargs localedef --delete-from-archive

mv /usr/lib/locale/locale-archive /usr/lib/locale/locale-archive.tmpl
build-locale-archive

# Mount Guest Additions
for c in `ls -d /dev/cdrom* /dev/sr0`
do
    mount -o ro $c /mnt/
    if [ -x /mnt/VBoxLinuxAdditions.run ]
    then
        break
    else
        umount /mnt/
    fi
done

# VirtualBox Guest Additions
/mnt/VBoxLinuxAdditions.run
chkconfig vboxadd-x11 off
umount /mnt/

%end
